{
  "name": "manager-assistant",
  "displayName": "Manager Assistant",
  "description": "Gerador de links formatados para relatórios no Manager",
  "version": "0.1.0",
  "publisher": "bbts",
  "icon": "resources/logo-bb.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/bbts/manager-assistant"
  },
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "manager-assistant-sidebar",
          "title": "Manager Assistant",
          "icon": "resources/logo-bb.png"
        }
      ]
    },
    "views": {
      "manager-assistant-sidebar": [
        {
          "id": "managerAssistantExplorer",
          "name": "Artefatos do Manager",
          "type": "webview",
          "icon": "$(file-code)"
        },
        {
          "id": "managerAssistantCommits",
          "name": "Commits Git",
          "icon": "$(git-commit)"
        },
        {
          "id": "managerAssistantHistory",
          "name": "Histórico de Relatórios",
          "icon": "$(history)"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "managerAssistantCommits",
        "contents": "Nenhum commit disponível."
      },
      {
        "view": "managerAssistantHistory",
        "contents": "Nenhum histórico disponível."
      }
    ],
    "commands": [
      {
        "command": "manager-assistant.refreshCommits",
        "title": "Atualizar commits",
        "icon": "$(refresh)"
      },
      {
        "command": "manager-assistant.captureLastCommit",
        "title": "Capturar último commit",
        "icon": "$(git-commit)"
      },
      {
        "command": "manager-assistant.loadCommitArtifacts",
        "title": "Carregar artefatos do commit",
        "icon": "$(git-commit)"
      },
      {
        "command": "manager-assistant.captureStagedChanges",
        "title": "Capturar alterações staged",
        "icon": "$(git-stage)"
      },
      {
        "command": "manager-assistant.sendToManager",
        "title": "Enviar para o Manager",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "manager-assistant.editArtifact",
        "title": "Editar artefato",
        "icon": "$(edit)"
      },
      {
        "command": "manager-assistant.copyArtifact",
        "title": "Copiar artefato",
        "icon": "$(copy)"
      },
      {
        "command": "manager-assistant.copyAllArtifacts",
        "title": "Copiar todos os artefatos",
        "icon": "$(copy-all)"
      },
      {
        "command": "manager-assistant.removeArtifact",
        "title": "Remover artefato",
        "icon": "$(trash)"
      },
      {
        "command": "manager-assistant.saveReport",
        "title": "Salvar relatório",
        "icon": "$(save)"
      },
      {
        "command": "manager-assistant.loadReport",
        "title": "Carregar relatório",
        "icon": "$(folder-opened)"
      },
      {
        "command": "manager-assistant.showFilters",
        "title": "Filtrar commits",
        "icon": "$(filter)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "manager-assistant.refreshCommits",
          "when": "view == managerAssistantCommits",
          "group": "navigation"
        },
        {
          "command": "manager-assistant.captureLastCommit",
          "when": "view == managerAssistantCommits",
          "group": "navigation"
        },
        {
          "command": "manager-assistant.captureStagedChanges",
          "when": "view == managerAssistantCommits",
          "group": "navigation"
        },
        {
          "command": "manager-assistant.refreshCommits",
          "when": "view == managerAssistantHistory",
          "group": "navigation"
        },
        {
          "command": "manager-assistant.saveReport",
          "when": "view == managerAssistantHistory",
          "group": "9_cutcopypaste"
        },
        {
          "command": "manager-assistant.loadReport",
          "when": "view == managerAssistantHistory",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "manager-assistant.loadCommitArtifacts",
          "when": "view == managerAssistantCommits && viewItem == commit",
          "group": "inline"
        },
        {
          "command": "manager-assistant.sendToManager",
          "when": "view == managerAssistantExplorer && viewItem == artifact",
          "group": "inline"
        },
        {
          "command": "manager-assistant.editArtifact",
          "when": "view == managerAssistantExplorer && viewItem == artifact",
          "group": "inline"
        },
        {
          "command": "manager-assistant.copyArtifact",
          "when": "view == managerAssistantExplorer && viewItem == artifact",
          "group": "inline"
        },
        {
          "command": "manager-assistant.removeArtifact",
          "when": "view == managerAssistantExplorer && viewItem == artifact",
          "group": "inline"
        },
        {
          "command": "manager-assistant.loadCommitArtifacts",
          "when": "view == managerAssistantHistory && viewItem == report",
          "group": "inline"
        }
      ],
      "scm/title": [
        {
          "when": "scmProvider == git",
          "command": "manager-assistant.captureLastCommit",
          "group": "navigation"
        },
        {
          "when": "scmProvider == git",
          "command": "manager-assistant.captureStagedChanges",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Manager Assistant",
      "properties": {
        "managerAssistant.apiEndpoint": {
          "type": "string",
          "default": "",
          "description": "URL da API do Manager para integração direta (opcional)"
        },
        "managerAssistant.defaultComplexity": {
          "type": "string",
          "default": "Média",
          "enum": [
            "Baixa",
            "Média",
            "Alta",
            "N/A"
          ],
          "description": "Complexidade padrão para novos arquivos"
        },
        "managerAssistant.autoDetectFileType": {
          "type": "boolean",
          "default": true,
          "description": "Detectar automaticamente o tipo de arquivo"
        },
        "managerAssistant.reportHistoryLimit": {
          "type": "number",
          "default": 10,
          "description": "Número máximo de relatórios a manter no histórico"
        },
        "managerAssistant.defaultAuthor": {
          "type": "string",
          "default": "",
          "description": "Identificação padrão do autor (ex: c1234567)"
        },
        "managerAssistant.defaultTaskFormat": {
          "type": "string",
          "default": "T-\\d+",
          "description": "Formato padrão para reconhecimento de tarefas nas mensagens de commit (regex)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "node esbuild.js",
    "watch": "node esbuild.js --watch",
    "package": "node esbuild.js --production",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vscode/test-electron": "^2.3.2",
    "esbuild": "^0.17.15",
    "eslint": "^8.43.0",
    "mocha": "^10.2.0",
    "typescript": "^5.1.3"
  },
  "dependencies": {
    "simple-git": "^3.20.0"
  }
}